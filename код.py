# Определяем класс с именем Stack
class Stack:
    # Функция конструктора, который инициализирует пустой список для стека
    def __init__(self):
        self.items = []


    # Функция добавления элемента в стек
    def push(self, item):
        self.items.append(item)
        # Напечатает «ok», чтобы подтвердить успешную операцию push
        print("ok")


    # Функция удаления и возврата последнего элемента из стека
    def pop(self):
        if not self.is_empty():
            # Удалит и вернёт последний элемент из стека
            print(self.items.pop())
        else:
            # Выведет «ошибку», если стек пуст
            print("error")


    # Функция возврата последнего элемента из стека, не удаляя его
    def back(self):
        if not self.is_empty():
            # Возвращает последний элемент из стека
            print(self.items[-1])
        else:
            # Выведет «ошибку», если стек пуст
            print("error")


    # Функция, возвращающая количество элементов в стеке
    def size(self):
        print(len(self.items))


    # Функция очистки стека
    def clear(self):
        self.items = []
        # Напечатает «ok», чтобы подтвердить успешную операцию очистки
        print("ok")


    # Функция проверки, пуст ли стек
    def is_empty(self):
        return len(self.items) == 0


# Определит функцию для печати меню
def print_menu():
    print("Меню команд:")
    print("push <n> - добавить в стек число n")
    print("pop - удалить из стека последний элемент")
    print("back - вывести значение последнего элемента в стеке")
    print("size - вывести количество элементов в стеке")
    print("clear - очистить стек")
    print("exit - завершить работу")
    print("Команда:")


# Создает экземпляр класса Stack
stack = Stack()


# Распечатает меню
print_menu()


# Вводим цикл, чтобы непрерывно принимать вводимые пользователем данные и выполнять соответствующие операции
while True:

    # Возьмёт пользовательский ввод и разделит его на список слов
    command = input().split()

    # Проверит, является ли первое слово команды «push»
    if command[0] == "push":

        # Проверит, равна ли длина команды 2-м (т.е. содержит ли она число для ввода)
        if len(command) != 2:

            # Выведет «ошибку», если команда недействительна
            print("error")
        else:

            # Попробует преобразовать второе слово команды в целое число и поместить его в стек
            try:
                stack.push(int(command[1]))

                # Выведет «ошибку», если второе слово команды не может быть преобразовано в целое число
            except ValueError:
                print("error")

    # Проверит, является ли первое слово команды «pop»
    elif command[0] == "pop":

        # Вызов метода pop в стеке
        stack.pop()

    # Проверит, является ли первое слово команды «back»
    elif command[0] == "back":

        # Вызов метода back в стеке
        stack.back()

    # Проверит, является ли первое слово команды «size»
    elif command[0] == "size":

        # Вызов метода size в стеке
        stack.size()

    # Проверит, является ли первое слово команды «clear»
    elif command[0] == "clear":

        # Вызов метода clear в стеке
        stack.clear()

    # Проверит, является ли первое слово команды «exit»
    elif command[0] == "exit":

        # Напечатает «bye» и выйдет из цикла
        print("bye")
        break
    else:

        # Выведет «ошибку», если команда не распознана
        print("error")
